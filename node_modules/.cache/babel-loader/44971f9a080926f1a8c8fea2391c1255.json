{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/alek/Code/conference-room/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n\\n    \",\"\\n    \",\"\\n\\n    body, #root, html {\\n        height: 100%; \\n    }\\n\\n    body {\\n        font-family: 'Roboto', sans-serif\\n    }\\n\\n    &::placeholder {\\n        font-family: 'Roboto', sans-serif; \\n        font-size: 13px; \\n    }\\n\\n    *, *::before, *::after {\\n        box-sizing: border-box;\\n        margin: 0;\\n        padding: 0;\\n    }\\n\\n    .text-right {\\n        text-align: right;\\n    }\\n\\n    h4 {\\n        color: \",\"\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{createGlobalStyle}from'styled-components';import THEME from'theme';var fontFace=function fontFace(name,nameInFolder){var fontWeight=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'normal';var fontStyle=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'normal';return\"\\n      @font-face {\\n          font-family: \\\"\".concat(name,\"\\\";\\n          src: url(\").concat(require(\"assets/fonts/\".concat(name,\"/\").concat(nameInFolder,\".ttf\")),\") format(\\\"truetype\\\"); \\n          font-style: \").concat(fontStyle,\";\\n          font-weight: \").concat(fontWeight,\";\\n      } \\n  \");};export var GlobalStyles=createGlobalStyle(_templateObject(),fontFace('Roboto','Roboto-Bold','bold'),fontFace('Roboto','Roboto-Regular'),THEME.fluent.DARK_BROWN);","map":{"version":3,"sources":["/home/alek/Code/conference-room/src/GlobalStyles.tsx"],"names":["createGlobalStyle","THEME","fontFace","name","nameInFolder","fontWeight","fontStyle","require","GlobalStyles","fluent","DARK_BROWN"],"mappings":"ovBAAA,OAASA,iBAAT,KAAkC,mBAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAeC,YAAf,CAAqF,IAAhDC,CAAAA,UAAgD,2DAAnC,QAAmC,IAAzBC,CAAAA,SAAyB,2DAAb,QAAa,CAClG,+DAEsBH,IAFtB,oCAGiBI,OAAO,wBAAiBJ,IAAjB,aAAyBC,YAAzB,SAHxB,4DAIoBE,SAJpB,sCAKqBD,UALrB,oBAQH,CATD,CAWA,MAAO,IAAMG,CAAAA,YAAY,CAAGR,iBAAH,mBAEnBE,QAAQ,CAAC,QAAD,CAAW,aAAX,CAA0B,MAA1B,CAFW,CAGnBA,QAAQ,CAAC,QAAD,CAAW,gBAAX,CAHW,CA6BRD,KAAK,CAACQ,MAAN,CAAaC,UA7BL,CAAlB","sourcesContent":["import { createGlobalStyle } from 'styled-components'\nimport THEME from 'theme'\n\nconst fontFace = (name: string, nameInFolder: string, fontWeight = 'normal', fontStyle = 'normal') => {\n    return `\n      @font-face {\n          font-family: \"${name}\";\n          src: url(${require(`assets/fonts/${name}/${nameInFolder}.ttf`)}) format(\"truetype\"); \n          font-style: ${fontStyle};\n          font-weight: ${fontWeight};\n      } \n  `\n}\n\nexport const GlobalStyles = createGlobalStyle`\n\n    ${fontFace('Roboto', 'Roboto-Bold', 'bold')}\n    ${fontFace('Roboto', 'Roboto-Regular')}\n\n    body, #root, html {\n        height: 100%; \n    }\n\n    body {\n        font-family: 'Roboto', sans-serif\n    }\n\n    &::placeholder {\n        font-family: 'Roboto', sans-serif; \n        font-size: 13px; \n    }\n\n    *, *::before, *::after {\n        box-sizing: border-box;\n        margin: 0;\n        padding: 0;\n    }\n\n    .text-right {\n        text-align: right;\n    }\n\n    h4 {\n        color: ${THEME.fluent.DARK_BROWN as string}\n    }\n`"]},"metadata":{},"sourceType":"module"}