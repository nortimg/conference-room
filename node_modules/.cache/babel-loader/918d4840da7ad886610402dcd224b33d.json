{"ast":null,"code":"var _jsxFileName = \"/home/alek/Code/conference-room/src/components/Tabs/Tab.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport THEME from 'theme';\nconst CloseButton = styled.span``;\n\nconst tabColor = p => p.active ? 'white' : THEME.fluent.SHADOW_BLUE;\n\nconst Wrapper = styled.button`\n    display: block; \n    position: relative; \n    height: 100%;\n    max-height: 30px;\n    border: 0; \n    border-radius: 5px 5px 0 0; \n    margin-right: 2px; \n    outline: 0; \n    background-color: ${tabColor};\n    z-index: ${p => p.active ? 1 : 0}; \n    padding: 6px 10px; \n\n    &::after, &::before {\n        content: ''; \n        display: block;       \n        width: 0; \n        height: 0; \n        position: absolute;\n        border-width: 1.5px; \n        border-style: solid; \n        bottom: 0; \n    }\n\n    &::after {\n        right: 0; \n        transform: translateX(100%);\n        border-color: transparent transparent ${tabColor} ${tabColor};\n    }\n\n    &::before {\n        left: 0; \n        transform: translateX(-100%);\n        border-color: transparent ${tabColor} ${tabColor} transparent;\n    }\n\n    /* svg {\n        position: absolute;\n    } */\n`;\nconst Title = styled.span`\n\n`;\nexport const Tab = ({\n  title,\n  closeButton,\n  active\n}) => {\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    active: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, title), closeButton && /*#__PURE__*/React.createElement(CloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }));\n};\nexport default Tab;","map":{"version":3,"sources":["/home/alek/Code/conference-room/src/components/Tabs/Tab.tsx"],"names":["React","styled","THEME","CloseButton","span","tabColor","p","active","fluent","SHADOW_BLUE","Wrapper","button","Title","Tab","title","closeButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAwC,mBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAQA,MAAMC,WAAW,GAAGF,MAAM,CAACG,IAAK,EAAhC;;AAMA,MAAMC,QAAQ,GAAIC,CAAD,IAAuBA,CAAC,CAACC,MAAF,GAAW,OAAX,GAAqBL,KAAK,CAACM,MAAN,CAAaC,WAA1E;;AACA,MAAMC,OAAO,GAAGT,MAAM,CAACU,MAAO;;;;;;;;;wBASNN,QAAS;eACjBC,CAAD,IAAuBA,CAAC,CAACC,MAAF,GAAW,CAAX,GAAe,CAAE;;;;;;;;;;;;;;;;;gDAiBPF,QAAS,IAAGA,QAAS;;;;;;oCAMjCA,QAAS,IAAGA,QAAS;;;;;;CAjCzD;AAyCA,MAAMO,KAAK,GAAGX,MAAM,CAACG,IAAK;;CAA1B;AAIA,OAAO,MAAMS,GAAwB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBR,EAAAA;AAAtB,CAAD,KAAoC;AAExE,sBACI,oBAAC,OAAD;AACI,IAAA,MAAM,EAAEA,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,KADL,CAJJ,EAQQC,WAAW,iBACX,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,CADJ;AAeH,CAjBM;AAmBP,eAAeF,GAAf","sourcesContent":["import React from 'react'\nimport styled, { StyledComponent } from 'styled-components'\nimport THEME from 'theme'\n\nexport interface ITabProps {\n    closeButton?: boolean\n    title: any\n    active: boolean\n}\n\nconst CloseButton = styled.span``\n\ninterface ITabStyleProps {\n    active: boolean\n}\n\nconst tabColor = (p: ITabStyleProps) => p.active ? 'white' : THEME.fluent.SHADOW_BLUE as string\nconst Wrapper = styled.button`\n    display: block; \n    position: relative; \n    height: 100%;\n    max-height: 30px;\n    border: 0; \n    border-radius: 5px 5px 0 0; \n    margin-right: 2px; \n    outline: 0; \n    background-color: ${tabColor};\n    z-index: ${(p: ITabStyleProps) => p.active ? 1 : 0}; \n    padding: 6px 10px; \n\n    &::after, &::before {\n        content: ''; \n        display: block;       \n        width: 0; \n        height: 0; \n        position: absolute;\n        border-width: 1.5px; \n        border-style: solid; \n        bottom: 0; \n    }\n\n    &::after {\n        right: 0; \n        transform: translateX(100%);\n        border-color: transparent transparent ${tabColor} ${tabColor};\n    }\n\n    &::before {\n        left: 0; \n        transform: translateX(-100%);\n        border-color: transparent ${tabColor} ${tabColor} transparent;\n    }\n\n    /* svg {\n        position: absolute;\n    } */\n`\n\nconst Title = styled.span`\n\n`\n\nexport const Tab: React.FC<ITabProps> = ({ title, closeButton, active }) => {\n    \n    return (\n        <Wrapper\n            active={active}\n        >\n\n            <Title>\n                {title}\n            </Title>\n            {\n                closeButton &&\n                <CloseButton />\n            }\n\n        </Wrapper>\n    )\n}\n\nexport default Tab"]},"metadata":{},"sourceType":"module"}