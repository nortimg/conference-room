{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/alek/Code/conference-room/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    height: 100%; \\n    flex-direction: column; \\n    align-items: center;\\n    overflow-y: scroll; \\n    padding: 20px 0; \\n    background-color: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import Message from'./Message/Message';import THEME from'theme';var Wrapper=styled.div(_templateObject(),THEME.fluent.SECOND_BACKGROUND_COLOR);var Feed=function Feed(props){var messages=props.messages.map(function(m,i){return/*#__PURE__*/React.createElement(Message,{author:m.author,text:m.text,date:m.date,time:m.time,fromMe:m.fromMe,photoURL:m.photoURL,key:i});});return/*#__PURE__*/React.createElement(Wrapper,null,messages);};export default Feed;","map":{"version":3,"sources":["/home/alek/Code/conference-room/src/components/Chat/Feed.tsx"],"names":["React","styled","Message","THEME","Wrapper","div","fluent","SECOND_BACKGROUND_COLOR","Feed","props","messages","map","m","i","author","text","date","time","fromMe","photoURL"],"mappings":"4dAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAuC,mBAAvC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAMA,GAAMC,CAAAA,OAAO,CAAGH,MAAM,CAACI,GAAV,mBAOWF,KAAK,CAACG,MAAN,CAAaC,uBAPxB,CAAb,CAUA,GAAMC,CAAAA,IAA8B,CAAG,QAAjCA,CAAAA,IAAiC,CAACC,KAAD,CAAW,CAC9C,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,SAACC,CAAD,CAAIC,CAAJ,qBAChC,oBAAC,OAAD,EACI,MAAM,CAAED,CAAC,CAACE,MADd,CAEI,IAAI,CAAEF,CAAC,CAACG,IAFZ,CAGI,IAAI,CAAEH,CAAC,CAACI,IAHZ,CAII,IAAI,CAAEJ,CAAC,CAACK,IAJZ,CAKI,MAAM,CAAEL,CAAC,CAACM,MALd,CAMI,QAAQ,CAAEN,CAAC,CAACO,QANhB,CAOI,GAAG,CAAEN,CAPT,EADgC,EAAnB,CAAjB,CAYA,mBACI,oBAAC,OAAD,MAEQH,QAFR,CADJ,CAOH,CApBD,CAuBA,cAAeF,CAAAA,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Message, { IMessageProps } from './Message/Message'\nimport THEME from 'theme'\n\ninterface IChatFeedProps {\n    messages: IMessageProps[]\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    height: 100%; \n    flex-direction: column; \n    align-items: center;\n    overflow-y: scroll; \n    padding: 20px 0; \n    background-color: ${THEME.fluent.SECOND_BACKGROUND_COLOR as string};\n`\n\nconst Feed: React.FC<IChatFeedProps> = (props) => {\n    const messages = props.messages.map((m, i) => (\n        <Message\n            author={m.author}\n            text={m.text}\n            date={m.date}\n            time={m.time}\n            fromMe={m.fromMe}\n            photoURL={m.photoURL}\n            key={i}\n        />\n    ))\n\n    return (\n        <Wrapper>\n            {\n                messages\n            }\n        </Wrapper>\n    )\n}\n\n\nexport default Feed"]},"metadata":{},"sourceType":"module"}