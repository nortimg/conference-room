{"ast":null,"code":"var _jsxFileName = \"/home/alek/Code/conference-room/src/components/Chat/Message/MessageContent.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport THEME from 'theme';\nconst Quote = styled.div`\n    display: flex; \n    margin-top: 5px;\n    position: relative;\n    max-width: 210px; \n    justify-content: center; \n    position: relative;\n\n    p {\n        z-index: 3; \n        font-size: 13px; \n        padding: 10px 10px 15px 5%;\n    }\n`;\nconst tailSize = 3;\n\nconst isFromMe = (yes, no) => p => p.fromMe ? yes : no;\n\nconst Background = styled.div`\n    width: 100%;\n    height: 100%;  \n    position: absolute; \n    border-radius: ${isFromMe('5px 5px 0 5px', '0 5px 5px 5px')}; \n    background-color: ${isFromMe(THEME.fluent.BLUE, THEME.fluent.LIGHT_GREY)}; \n\n    &::before {\n        content: '';\n        display: block;\n        position: absolute; \n        width: ${tailSize}px; \n        height: ${tailSize}px; \n        border-width: ${tailSize}px;\n        border-style: solid; \n        transform: ${isFromMe('translateY(100%)', 'translateY(-100%)')};\n        border-color: ${isFromMe(THEME.fluent.BLUE + ' ' + THEME.fluent.BLUE + ' transparent transparent', 'transparent transparent ' + THEME.fluent.LIGHT_GREY + ' ' + THEME.fluent.LIGHT_GREY)};\n        ${isFromMe('right', 'left')}: 0;\n        ${isFromMe('bottom', 'top')}: 0; \n    }\n`;\n\nconst MessageContent = props => {\n  return /*#__PURE__*/React.createElement(Quote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, props.text), /*#__PURE__*/React.createElement(Background, {\n    fromMe: props.fromMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MessageContent;","map":{"version":3,"sources":["/home/alek/Code/conference-room/src/components/Chat/Message/MessageContent.tsx"],"names":["React","styled","THEME","Quote","div","tailSize","isFromMe","yes","no","p","fromMe","Background","fluent","BLUE","LIGHT_GREY","MessageContent","props","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;;;CAAzB;AAeA,MAAMC,QAAQ,GAAG,CAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAWC,EAAX,KAAwBC,CAAD,IAA0BA,CAAC,CAACC,MAAF,GAAWH,GAAX,GAAiBC,EAAnF;;AACA,MAAMG,UAAU,GAAGV,MAAM,CAACG,GAAI;;;;qBAITE,QAAQ,CAAC,eAAD,EAAkB,eAAlB,CAAmC;wBACxCA,QAAQ,CAACJ,KAAK,CAACU,MAAN,CAAaC,IAAd,EAAoBX,KAAK,CAACU,MAAN,CAAaE,UAAjC,CAA6C;;;;;;iBAM5DT,QAAS;kBACRA,QAAS;wBACHA,QAAS;;qBAEZC,QAAQ,CAAC,kBAAD,EAAqB,mBAArB,CAA0C;wBAC/CA,QAAQ,CACpBJ,KAAK,CAACU,MAAN,CAAaC,IAAb,GAAoB,GAApB,GAA0BX,KAAK,CAACU,MAAN,CAAaC,IAAvC,GAA8C,0BAD1B,EAEpB,6BAA6BX,KAAK,CAACU,MAAN,CAAaE,UAA1C,GAAuD,GAAvD,GAA6DZ,KAAK,CAACU,MAAN,CAAaE,UAFtD,CAGtB;UACAR,QAAQ,CAAC,OAAD,EAAU,MAAV,CAAkB;UAC1BA,QAAQ,CAAC,QAAD,EAAW,KAAX,CAAkB;;CArBpC;;AAgCA,MAAMS,cAAyC,GAAIC,KAAD,IAAW;AAEzD,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,IADX,CADJ,eAII,oBAAC,UAAD;AACI,IAAA,MAAM,EAAED,KAAK,CAACN,MADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAUH,CAZD;;AAcA,eAAeK,cAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport THEME from 'theme'\n\nconst Quote = styled.div`\n    display: flex; \n    margin-top: 5px;\n    position: relative;\n    max-width: 210px; \n    justify-content: center; \n    position: relative;\n\n    p {\n        z-index: 3; \n        font-size: 13px; \n        padding: 10px 10px 15px 5%;\n    }\n`\n\nconst tailSize = 3\n\nconst isFromMe = (yes: any, no: any) => (p: {fromMe: boolean}) => p.fromMe ? yes : no\nconst Background = styled.div`\n    width: 100%;\n    height: 100%;  \n    position: absolute; \n    border-radius: ${isFromMe('5px 5px 0 5px', '0 5px 5px 5px')}; \n    background-color: ${isFromMe(THEME.fluent.BLUE, THEME.fluent.LIGHT_GREY)}; \n\n    &::before {\n        content: '';\n        display: block;\n        position: absolute; \n        width: ${tailSize}px; \n        height: ${tailSize}px; \n        border-width: ${tailSize}px;\n        border-style: solid; \n        transform: ${isFromMe('translateY(100%)', 'translateY(-100%)')};\n        border-color: ${isFromMe(\n            THEME.fluent.BLUE + ' ' + THEME.fluent.BLUE + ' transparent transparent', \n            'transparent transparent ' + THEME.fluent.LIGHT_GREY + ' ' + THEME.fluent.LIGHT_GREY\n        )};\n        ${isFromMe('right', 'left')}: 0;\n        ${isFromMe('bottom', 'top')}: 0; \n    }\n`\n\n\ninterface IMessageContent {\n    fromMe: boolean\n    text: string\n}\n\n\nconst MessageContent: React.FC<IMessageContent> = (props) => {\n\n    return (\n        <Quote>\n            <p>\n                {props.text}\n            </p>\n            <Background\n                fromMe={props.fromMe}\n            />\n        </Quote>\n    )\n}\n\nexport default MessageContent"]},"metadata":{},"sourceType":"module"}